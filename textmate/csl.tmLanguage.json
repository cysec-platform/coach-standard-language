{
  "name": "Code Standard Language",
  "scopeName": "source.csl",
  "fileTypes": ["dsl"],
  "patterns": [
    {
      "match": "//.*$",
      "name": "comment.line.double-slash.csl"
    },
    {
      "match": "\\b(TRUE|FALSE|NULL)\\b",
      "name": "constant.language.csl"
    },
    {
      "match": "\\b(null|addScore|capScore|and|or|not|xor|equals|greaterThan|greaterThanOrEq|lowerThan|lowerThanOrEq|if|concat|contains|set|get|append|setHidden|setMHidden|setNext|setAnswer|isSelected|isAnswered|addBadge|addBadgeClass|awardBadge|revokeBadge|addRecommendation|revokeRecommendation|createSubcoach|print|tn|arrayAdd|arrayRemove|arrayContains|arrayElements|arrayLength|removeSubcoach|getParentArgument)\\b",
      "name": "support.function.csl"
    },
    {
      "match": "\\b\\d+\\b",
      "name": "constant.numeric.csl"
    },
    {
      "begin": "\"",
      "end": "\"",
      "name": "string.quoted.double.csl",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.csl"
        }
      ]
    },
    {
      "match": ":",
      "name": "keyword.operator.separator.csl"
    },
    {
      "match": ";",
      "name": "punctuation.terminator.csl"
    },
    {
      "match": "[{}(),]",
      "name": "punctuation.section.csl"
    }
  ],
  "repository": {
    "statement": {
      "patterns": [
        {
          "match": "^\\s*([^:]+)\\s*:\\s*([^:]+)\\s*:",
          "captures": {
            "1": {
              "name": "variable.parameter.condition.csl"
            },
            "2": {
              "name": "entity.name.function.statement.csl"
            }
          }
        }
      ]
    }
  }
}